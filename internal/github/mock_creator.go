// Code generated by MockGen. DO NOT EDIT.
// Source: creator.go

// Package github is a generated GoMock package.
package github

import (
	context "context"
	reflect "reflect"

	object "github.com/go-git/go-git/v5/plumbing/object"
	gomock "github.com/golang/mock/gomock"
	github "github.com/google/go-github/v47/github"
)

// MockCreator is a mock of Creator interface.
type MockCreator struct {
	ctrl     *gomock.Controller
	recorder *MockCreatorMockRecorder
}

// MockCreatorMockRecorder is the mock recorder for MockCreator.
type MockCreatorMockRecorder struct {
	mock *MockCreator
}

// NewMockCreator creates a new mock instance.
func NewMockCreator(ctrl *gomock.Controller) *MockCreator {
	mock := &MockCreator{ctrl: ctrl}
	mock.recorder = &MockCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreator) EXPECT() *MockCreatorMockRecorder {
	return m.recorder
}

// CreateIssue mocks base method.
func (m *MockCreator) CreateIssue(ctx context.Context, err error, upstreamURL string, commit *object.Commit) (*github.Issue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIssue", ctx, err, upstreamURL, commit)
	ret0, _ := ret[0].(*github.Issue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateIssue indicates an expected call of CreateIssue.
func (mr *MockCreatorMockRecorder) CreateIssue(ctx, err, upstreamURL, commit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIssue", reflect.TypeOf((*MockCreator)(nil).CreateIssue), ctx, err, upstreamURL, commit)
}

// CreatePR mocks base method.
func (m *MockCreator) CreatePR(ctx context.Context, branch, base, upstreamURL string, commit *object.Commit, draft bool) (*github.PullRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePR", ctx, branch, base, upstreamURL, commit, draft)
	ret0, _ := ret[0].(*github.PullRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePR indicates an expected call of CreatePR.
func (mr *MockCreatorMockRecorder) CreatePR(ctx, branch, base, upstreamURL, commit, draft interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePR", reflect.TypeOf((*MockCreator)(nil).CreatePR), ctx, branch, base, upstreamURL, commit, draft)
}
